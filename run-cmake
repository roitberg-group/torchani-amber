#!/bin/bash

usage() { echo "Usage: [OPTION]...
    Configure, Generate buildsystem, build, run tests, and install TorchANI-Interface.

    All options are boolean flags.
    -B Don't build or install, only configure and generate
    -I Don't install, only configure, generate and build
    -T Don't run tests after build / installation
    -P Don't auto detect and link to PyTorch
    -C Don't use Conda compilers, CUDA Toolkit, PyTorch, and cuDNN
    -g Build in Debug configuration
    -h Print this message" 1>&2; }

use_conda_libs=ON
use_pytorch_libs=ON
run_tests=1
cmake_build=1
cmake_install=1
cmake_build_type="Release"
while getopts "TIBPCgh" o; do
    case "${o}" in
        P)
            use_pytorch_libs=OFF
            ;;
        C)
            use_conda_libs=OFF
            ;;
        T)
            run_tests=0
            ;;
        I)
            cmake_install=0
            ;;
        B)
            cmake_build=0
            cmake_install=0
            run_tests=0
            ;;
        g)
            cmake_build_type="Debug"
            ;;
        h)
            usage
            exit 0
            ;;
        *)
            echo "$o"
            echo "Incorrect argument"
            usage
            exit 1
            ;;
    esac
done

# The directory of this script, taken from:
# https://stackoverflow.com/questions/59895/
# how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script
src_dir=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
bld_dir="$src_dir/build"

# Overwrite these in case they are set by the env (e.g. the conda compilers set them)
export CFLAGS="$CFLAGS -mtune=native -march=x86-64"
export CXXFLAGS="$CXXFLAGS -mtune=native -march=x86-64"
export FFLAGS="$FFLAGS -mtune=native -march=x86-64"

# Paths to conda compilers are automatically detected by CMake
cmake \
    -S"$src_dir" \
    -B"$bld_dir" \
    -DCMAKE_INSTALL_PREFIX="$HOME/.local/" \
    -DCMAKE_BUILD_TYPE="$cmake_build_type" \
    -DLINK_TO_PYTORCH_LIBS=$use_pytorch_libs \
    -DPREFER_CONDA_LIBS=$use_conda_libs \
    -DCMAKE_CUDA_HOST_COMPILER="${CONDA_PREFIX}"/bin/x86_64-conda-linux-gnu-g++ \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
CFG_EXITCODE=$?

if [ "$cmake_build" -eq 1 ] && [ $CFG_EXITCODE -eq 0 ]; then
    cmake --build "$bld_dir"
    BLD_EXITCODE=$?

    if [ "$run_tests" -eq 1 ] && [ $BLD_EXITCODE -eq 0 ]; then
        echo "Starting to run tests ..."
        if ! ./build/tests; then
            echo "Tests failed!!"
            # Skip install step if the tests fail
            cmake_install=0
        fi
    else
        echo "Skipping test step"
    fi

    if [ "$cmake_install" -eq 1 ] && [ $BLD_EXITCODE -eq 0 ]; then
        cmake --install "$bld_dir"
    else
        echo "Skipping install step"
    fi
else
    echo "Skipping build (and install) step"
fi
